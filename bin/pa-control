#!/usr/bin/env python3
# Copyright (c) 2011, 2012, 2013 Marek Sapota
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE

from Shade.pa_control.PaControl import PaControl
from Shade.ArgParse import ArgParse

parser = ArgParse(
    description = 'PulseAudio controls for the command line'
)
parser.add_argument(
    '--mute',
    dest = 'mute',
    action = 'store_true',
    help = 'mute all sinks'
)
parser.add_argument(
    '--unmute',
    dest = 'unmute',
    action = 'store_true',
    help = 'unmute all sinks'
)
parser.add_argument(
    '--mute-switch',
    dest = 'mute_switch',
    action = 'store_true',
    help = 'switch mute setting on all sinks'
)
parser.add_argument(
    '--volume',
    dest = 'volume',
    type = int,
    help = 'set volume of all sinks (0 to 100)'
)
parser.add_argument(
    '--volume-up',
    dest = 'volume_up',
    action = 'store_true',
    help = 'increase volume by 5'
)
parser.add_argument(
    '--volume-down',
    dest = 'volume_down',
    action = 'store_true',
    help = 'decrease volume by 5'
)
args = parser.parse_args()

pa = PaControl(args)
pa.loop()
